<?php
if ( !class_exists('Puc_v4p6_Plugin_Update', false) ): class Puc_v4p6_Plugin_Update extends Puc_v4p6_Update { public $id = 0; public $homepage; public $upgrade_notice; public $tested; public $icons = array(); public $filename; protected static $extraFields = array( 'id', 'homepage', 'tested', 'upgrade_notice', 'icons', 'filename', ); public static function fromJson($json){ $pluginInfo = Puc_v4p6_Plugin_Info::fromJson($json); if ( $pluginInfo !== null ) { return self::fromPluginInfo($pluginInfo); } else { return null; } } public static function fromPluginInfo($info){ return self::fromObject($info); } public static function fromObject($object) { $update = new self(); $update->copyFields($object, $update); return $update; } protected function getFieldNames() { return array_merge(parent::getFieldNames(), self::$extraFields); } public function toWpFormat() { $update = parent::toWpFormat(); $update->id = $this->id; $update->url = $this->homepage; $update->tested = $this->tested; $update->plugin = $this->filename; if ( !empty($this->upgrade_notice) ) { $update->upgrade_notice = $this->upgrade_notice; } if ( !empty($this->icons) && is_array($this->icons) ) { $icons = array_intersect_key( $this->icons, array('svg' => true, '1x' => true, '2x' => true, 'default' => true) ); if ( !empty($icons) ) { $update->icons = $icons; if ( !isset($update->icons['default']) ) { $update->icons['default'] = current($update->icons); } } } return $update; } } endif;